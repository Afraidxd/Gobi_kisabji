import random
from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import CallbackContext, CallbackQueryHandler, CommandHandler
from shivu import application, PHOTO_URL, SUPPORT_CHAT, db, GROUP_ID

collection = db['total_pm_users']

async def start(update: Update, context: CallbackContext) -> None:
    user_id = update.effective_user.id
    first_name = update.effective_user.first_name
    username = update.effective_user.username

    user_data = await collection.find_one({"_id": user_id})

    if user_data is None:
        await collection.insert_one({"_id": user_id, "first_name": first_name, "username": username})
        await context.bot.send_message(chat_id=GROUP_ID, text=f"#ùêçùêÑùêñ ùêîùêíùêÑùêë\nŒî ùñ®ùñ£ : {user_id}\nŒî ùñ°ùñ∏ : {first_name}", parse_mode='HTML')
    else:
        if user_data['first_name'] != first_name or user_data['username'] != username:
            await collection.update_one({"_id": user_id}, {"$set": {"first_name": first_name, "username": username}})

    caption = f"""
    *** ú·¥á è ·¥õ ú·¥á Ä·¥á! {first_name}***\n
    ***…™ am ·¥Ñ·¥Ä Ä …¢ Ä·¥Ä ô ô·¥á Ä  ô·¥è·¥õ. ·¥Ä·¥Ö·¥Ö ·¥ç·¥á ·¥õ·¥è  è·¥è·¥ú Ä …¢ Ä·¥è·¥ú·¥ò ·¥Ä…¥·¥Ö ·¥õ·¥Ä·¥ò ·¥è…¥ ·¥õ ú·¥á  ú·¥á ü·¥ò  ô·¥ú·¥õ·¥õ·¥è…¥ ·¥õ·¥è ·¥Ö…™Íú±·¥Ñ·¥è·¥†·¥á Ä ·¥Ä ü ü ·¥ç è “ì·¥á·¥Ä·¥õ·¥ú Ä·¥áÍú± ·¥Ä…¥·¥Ö ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥ÖÍú±.  ü·¥á·¥õ'Íú±  Ä·¥Ä·¥Ñ·¥á ·¥õ·¥è ·¥õ ú·¥á ·¥õ·¥è·¥ò!***\n
    """

    photo_url = random.choice(PHOTO_URL)

    keyboard = [
        [InlineKeyboardButton("·¥Ä·¥Ö·¥Ö ·¥ç·¥á ·¥õ·¥è  è·¥è·¥ú Ä …¢ Ä·¥è·¥ú·¥ò", url=f'https://t.me/getyourcar_bot?startgroup=new')],
        [InlineKeyboardButton("·¥Ñ ú·¥Ä…¥…¥·¥á ü", url='https://t.me/BotupdateXD'), InlineKeyboardButton("…¢ Ä·¥è·¥ú·¥ò", url=SUPPORT_CHAT)],
        [InlineKeyboardButton(" ú·¥á ü·¥ò", callback_data='help'), InlineKeyboardButton("·¥Ñ Ä·¥á·¥Ö…™·¥õÍú±", callback_data='credits')]
    ]

    reply_markup = InlineKeyboardMarkup(keyboard)

    await context.bot.send_photo(chat_id=update.effective_chat.id, photo=photo_url, caption=caption, reply_markup=reply_markup, parse_mode='markdown')

async def button(update: Update, context: CallbackContext) -> None:
    query = update.callback_query
    await query.answer()

    if query.data == 'help':
        help_text = """
        ***Choose a category:***
1. ·¥ús·¥á Ä
2. …¢·¥Ä·¥ç·¥ás
        """
        help_keyboard = [
            [InlineKeyboardButton("·¥ús·¥á Ä", callback_data='user_help'), InlineKeyboardButton("…¢·¥Ä·¥ç·¥ás", callback_data='games_help')],
            [InlineKeyboardButton(" ô·¥Ä·¥Ñ·¥ã", callback_data='back')]
        ]
        reply_markup = InlineKeyboardMarkup(help_keyboard)

        await query.edit_message_caption(caption=help_text, reply_markup=reply_markup, parse_mode='markdown')

    elif query.data == 'user_help':
        user_help_text = """
        ***·¥ús·¥á Ä ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ös:***

***/grab: To Guess waifu (only works in group)***
***/marry: To marry a waifu and make it favorite***
***/strade : To trade slaves with other users***
***/sgift: Give any slaves to another user.. (only works in groups)***
***/slaves: To see Your slaves collection***
***/tops: Too See Top coin Users***
***/ctop: To see top character grabbers ***
***/propose: Too propose a random waifu***
***/sinv: To check current token balance***
***/spay: To pay other users from you own balance***
***/changetime: Change slaves appear time (only works in Groups)***
        """
        user_help_keyboard = [[InlineKeyboardButton("Back", callback_data='help')]]
        reply_markup = InlineKeyboardMarkup(user_help_keyboard)

        await query.edit_message_caption(caption=user_help_text, reply_markup=reply_markup, parse_mode='markdown')

    elif query.data == 'games_help':
        games_help_text = """
        ***…¢·¥Ä·¥ç·¥á ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ös:***

***/bal: ·¥õ·¥è ·¥Ñ ú·¥á·¥Ñ·¥ã  è·¥è·¥ú Ä  ô·¥Ä ü·¥Ä…¥·¥Ñ·¥á***
***/challenge: ·¥Ñ ú·¥Ä…¥·¥Ñ·¥á ·¥õ·¥è ·¥°…™…¥ 1  Ä·¥Ä…¥·¥Ö·¥è·¥ç ·¥Ñ·¥Ä Ä ***
***/bonus: ·¥õ·¥è ·¥Ñ ü·¥Ä…™·¥ç ·¥Ö·¥Ä…™ ü è  ô·¥è…¥·¥ús ***
***/wbonus: ·¥õ·¥è ·¥Ñ ü·¥Ä…™·¥ç ·¥°·¥á·¥á·¥ã ü è  ô·¥è…¥·¥ús***
***/store: To buy from daily store***
***/race: ·¥õ·¥è ·¥°…™…¥ s·¥è·¥ç·¥á ·¥õ·¥è·¥ã·¥á…¥s  ô·¥á·¥õ·¥°·¥á·¥á…¥ 10·¥ã - 50·¥ã ***
***/bet: ·¥õ·¥è  ô·¥á·¥õ s·¥è·¥ç·¥á ·¥õ·¥è·¥ã·¥á…¥s***
        """
        games_help_keyboard = [[InlineKeyboardButton("Back", callback_data='help')]]
        reply_markup = InlineKeyboardMarkup(games_help_keyboard)

        await query.edit_message_caption(caption=games_help_text, reply_markup=reply_markup, parse_mode='markdown')

    elif query.data == 'credits':
        credits_text = """
        ***Credits:***

·¥Ä ·¥õ·¥á ü·¥á…¢ Ä·¥Ä·¥ç ·¥ò Ä…™·¥†·¥Ä·¥õ·¥á …¢·¥Ä·¥ç·¥á  ô·¥è·¥õ\n
·¥° Ä…™·¥õ·¥õ·¥á…¥ …™…¥ ·¥© è·¥õ ú·¥è…¥ ·¥°…™·¥õ ú ·¥õ ú·¥á  ú·¥á ü·¥© ·¥è“ì [·¥© è Ä·¥è…¢ Ä·¥Ä·¥ç](https://github.com/pyrogram/pyrogram) [·¥© è·¥õ ú·¥è…¥-·¥õ·¥á ü·¥á…¢ Ä·¥Ä·¥ç- ô·¥è·¥õ](https://github.com/python-telegram-bot/python-telegram-bot) ·¥Ä…¥·¥Ö ·¥ús…™…¥…¢ [·¥ç·¥è…¥…¢·¥è](https://cloud.mongodb.com) ·¥Äs ·¥Ö·¥Ä·¥õ·¥Ä ô·¥Äs·¥á.

 ú·¥á Ä·¥á ·¥Ä Ä·¥á ·¥ç è ·¥Ö·¥á·¥†·¥á ü·¥è·¥ò·¥á ÄÍú±:
        
‚ú™ : [ùô∞ ü·¥áx](https://t.me/ipcxd)
‚ú™ : [ùêÉùêûùê•ùê≠ùêö](https://t.me/Notrealgeek)
        """
        credits_keyboard = [[InlineKeyboardButton(" ô·¥Ä·¥Ñ·¥ã", callback_data='back')]]
        reply_markup = InlineKeyboardMarkup(credits_keyboard)

        await query.edit_message_caption(caption=credits_text, reply_markup=reply_markup, parse_mode='markdown')

    elif query.data == 'back':
        start_text = f"""
        ***Hey there! {update.effective_user.first_name}***\n
        ***I am ·¥Ñ·¥Ä Ä …¢ Ä·¥Ä ô ô·¥á Ä  ô·¥è·¥õ. ·¥Ä·¥Ö·¥Ö ·¥ç·¥á ·¥õ·¥è  è·¥è·¥ú Ä …¢ Ä·¥è·¥ú·¥ò ·¥Ä…¥·¥Ö ·¥õ·¥Ä·¥ò ·¥è…¥ ·¥õ ú·¥á  ú·¥á ü·¥ò  ô·¥ú·¥õ·¥õ·¥è…¥ ·¥õ·¥è ·¥Ö…™Íú±·¥Ñ·¥è·¥†·¥á Ä ·¥Ä ü ü ·¥ç è “ì·¥á·¥Ä·¥õ·¥ú Ä·¥áÍú± ·¥Ä…¥·¥Ö ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥ÖÍú±.  ü·¥á·¥õ'Íú±  Ä·¥Ä·¥Ñ·¥á ·¥õ·¥è ·¥õ ú·¥á ·¥õ·¥è·¥ò!***\n
        """

        photo_url = random.choice(PHOTO_URL)
        keyboard = [
            [InlineKeyboardButton("·¥Ä·¥Ö·¥Ö ·¥ç·¥á ·¥õ·¥è  è·¥è·¥ú Ä …¢ Ä·¥è·¥ú·¥ò", url=f'https://t.me/Grab_Yourslave_bot?startgroup=new')],
            [InlineKeyboardButton("·¥Ñ ú·¥Ä…¥…¥·¥á ü", url='https://t.me/BotupdateXD'), InlineKeyboardButton("…¢ Ä·¥è·¥ú·¥ò", url='https://t.me/BotsupportXD')],
            [InlineKeyboardButton(" ú·¥á ü·¥ò", callback_data='help'), InlineKeyboardButton("·¥Ñ Ä·¥á·¥Ö…™·¥õÍú±", callback_data='credits')]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)

        await query.edit_message_caption(caption=start_text, reply_markup=reply_markup, parse_mode='markdown')

# Ensure the callback query handler pattern matches the possible callback data
application.add_handler(CallbackQueryHandler(button, pattern='^(help|credits|back|user_help|games_help)$'))
start_handler = CommandHandler('start', start)
application.add_handler(start_handler)
